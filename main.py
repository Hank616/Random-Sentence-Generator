# -*- coding: utf-8 -*-
"""Main-Random Sentence Generator SYCCL

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dRMbRm60pVMD_YThlC0uDOInHPN9uMG1
"""

from random import shuffle
input_keywords = ""
keywords = ""

input_keywords = input("Please enter your key verb: ")
keywords = input_keywords.split()
print(keywords)

class Rule:
  def __init__(self, input, output):
    self.input = input
    self.output = output

  def apply_to(self, str):
    return str.replace(self.input, self.output, 1)

article_list = ["the", "a", "an"]

locations = [
    "on desk", "in school", "under the bed", "beside the window", "at the park",
    "on the shelf", "in the kitchen", "near the lake", "in the garden", "at the mall",
    "on the roof", "under the table", "beside the door", "at the beach", "in the car",
    "on the couch", "in the office", "near the mountain", "at the airport", "on the floor",
    "in the classroom", "beside the river", "under the chair", "at the station", "in the yard",
    "on the balcony", "in the garage", "near the forest", "at the zoo", "on the path",
    "in the living room", "under the stairs", "beside the tree", "at the hospital", "on the bridge",
    "in the attic", "near the ocean", "in the library", "at the museum", "on the bus",
    "in the basement", "under the rug", "beside the fence", "at the theater", "on the train",
    "in the hallway", "near the river", "in the bookstore", "at the stadium", "on the playground"
]

verbs_with_nouns = [
    ("run", None),
    ("jump", None),
    ("swim", None),
    ("read", "a book"),
    ("write", "a letter"),
    ("speak", "a language"),
    ("listen", "to music"),
    ("walk", None),
    ("eat", "an apple"),
    ("drink", "water"),
    ("sleep", None),
    ("wake", None),
    ("think", "an idea"),
    ("know", "the answer"),
    ("understand", "the concept"),
    ("learn", "a new skill"),
    ("teach", "a subject"),
    ("play", "a game"),
    ("sing", "a song"),
    ("dance", None),
    ("watch", "a movie"),
    ("see", "the sunset"),
    ("look", "at the picture"),
    ("hear", "a noise"),
    ("smell", "a flower"),
    ("touch", "the surface"),
    ("feel", "the texture"),
    ("drive", "a car"),
    ("ride", "a bike"),
    ("fly", "a plane"),
    ("build", "a house"),
    ("make", "a cake"),
    ("create", "a masterpiece"),
    ("cook", "dinner"),
    ("bake", "bread"),
    ("clean", "the room"),
    ("wash", "the dishes"),
    ("paint", "a portrait"),
    ("draw", "a picture"),
    ("write", "a story"),
    ("study", "the material"),
    ("work", "a job"),
    ("buy", "groceries"),
    ("sell", "a product"),
    ("pay", "the bill"),
    ("borrow", "a book"),
    ("lend", "a hand"),
    ("give", "a gift"),
    ("take", "a break"),
    ("find", "the keys"),
    ("lose", "a wallet"),
    ("open", "the door"),
    ("close", "the window"),
    ("start", "the engine"),
    ("finish", "the project"),
    ("begin", "a journey"),
    ("end", "the meeting"),
    ("win", "the game"),
    ("lose", "the match"),
    ("love", "the movie"),
    ("hate", "the noise"),
    ("like", "the idea"),
    ("dislike", "the taste"),
    ("prefer", "coffee"),
    ("choose", "a path"),
    ("select", "an option"),
    ("decide", "the course"),
    ("plan", "the trip"),
    ("hope", "for success"),
    ("wish", "for happiness"),
    ("wait", None),
    ("stay", None),
    ("leave", "the room"),
    ("arrive", "at the destination"),
    ("travel", "the world"),
    ("visit", "a friend"),
    ("return", "the book"),
    ("move", "to a new house"),
    ("live", "a life"),
    ("die", None),
    ("help", "a friend"),
    ("support", "a cause"),
    ("fix", "the problem"),
    ("repair", "the car"),
    ("break", "the glass"),
    ("use", "a tool"),
    ("need", "help"),
    ("want", "a new phone"),
    ("can", None),
    ("do", "the work"),
    ("read a ", " book"),
    ("write a ", "letter"),
    ("speak a", "language"),
    ("listen to ", "music"),
    ("walk", None),
    ("eat an ", "apple"),
    ("drink", "water"),
    ("sleep", None),
    ("wake", None),
    ("think an ", "idea"),
    ("know the", "answer"),
    ("understand the ", "concept"),
    ("learn a new ", "skill"),
    ("teach a ", "subject"),
    ("play a ", "game"),
    ("sing a ", "song"),
    ("dance", None),
    ("watch a ", "movie"),
    ("see the ", "sunset"),
    ("look at the ", "picture"),
    ("hear a", "noise"),
    ("smell a ", "flower"),
    ("touch the ", "surface"),
    ("feel the", "texture"),
    ("drive a ", "car"),
    ("ride a ", "bike"),
    ("fly a ", "plane"),
    ("build a", "house"),
    ("make a ", "cake"),
    ("create a", "masterpiece"),
    ("cook", "dinner"),
    ("bake", "bread"),
    ("clean the ", "room"),
    ("wash the", "dishes"),
    ("paint a ", "portrait"),
    ("draw a ", "picture"),
    ("write a ", "story"),
    ("study the ", "material"),
    ("work a ", "job"),
    ("buy", "groceries"),
    ("sell a ", "product"),
    ("pay the ", "bill"),
    ("borrow a ", "book"),
    ("lend a ", "hand"),
    ("give a ", "gift"),
    ("take a ", "break"),
    ("find", "the keys"),
    ("lose a ", "wallet"),
    ("open the", "door"),
    ("close the", "window"),
    ("start the", "engine"),
    ("finish the", "project"),
    ("begin a ", "journey"),
    ("end the" , "meeting"),
    ("win the ", "game"),
    ("lose the", "match"),
    ("love the", "movie"),
    ("hate the", "noise"),
    ("like the", "idea"),
    ("dislike the", "taste"),
    ("prefer", "coffee"),
    ("choose a ", "path"),
    ("select an ", "option"),
    ("decide the", "course"),
    ("plan the", "trip"),
    ("hope for", "success"),
    ("wish for", "happiness"),
    ("wait", None),
    ("stay", None),
    ("leave the", "room"),
    ("arrive at the ", "destination"),
    ("travel the", "world"),
    ("visit a ", "friend"),
    ("return the", "book"),
    ("move to a new ", "house"),
    ("live a ", "life"),
    ("die", None),
    ("help a ", "friend"),
    ("support a ", "cause"),
    ("fix the" , "problem"),
    ("repair the", "car"),
    ("break the", "glass"),
    ("use a ", "tool"),
    ("need", "help"),
    ("want a new ", "phone"),
    ("can", None),
    ("do the", "work")
]

rules_lst = [Rule(" S ", " NP VP "),
              Rule(" NP ", " N "),
              Rule(" NP ", " D N "),
              Rule(" NP ", " PN "),
              Rule(" NP ", " N PP "),
              Rule(" NP ", " D N PP "),
              Rule(" VP ", " V NP "),
              Rule(" PP ", " P N "),
              Rule(" VP ", " V NP PP "),
              Rule(" D ", " article "), #"the, a, an"
              Rule(" PN ", " pronoun "), #"Marry, I, she, her"
              Rule(" N ", " Noun "), #"dog, bread "
              Rule(" V ", " verb "),#"see"
              Rule(" P ", " preposition "),
             ]

sentence = " S "
done1 = False
done2 = False

import spacy
from spacy import displacy
nlp = spacy.load('en_core_web_sm')
doc = nlp(input_keywords)
print(doc)

while (done1 == False):
  done2 = False
  sentence = " S "
  same_element =  0
  while(done2 == False):
      old_sentence = sentence
      shuffle(rules_lst)
      for rule in rules_lst:
        sentence = rule.apply_to(sentence)
      if "pronoun" in sentence:
        if "verb pronoun" in sentence:
          sentence = " S "
        else:
          if old_sentence == sentence:
            done2 = True
      else:
        sentence = " S "
  print(sentence)
  same_element = 0
  for i in range(0, len(doc)):
    if doc[i].pos_ == "PRON" or doc[i].pos_ == "DET":
      if keywords[i] in article_list:
        if " article " in sentence:
          same_element = same_element +1
          print("article")
      elif " pronoun " in sentence:
          same_element = same_element + 1
          print("pronoun")
    if doc[i].pos_ == "NOUN":
      if " Noun " in sentence:
        same_element = same_element + 1
        print("noun")
    if doc[i].pos_ == "ADP":
      if " preposition " in sentence:
        same_element = same_element + 1
        print("preposition")
    if doc[i].pos_ == "VERB":  #in Verb_list:
      if " verb " in sentence:
        same_element = same_element + 1
        print("verb")
    if same_element == len(keywords):
      done1 = True

print(sentence)

theNameYouWant = input("Please enter the name of the character: ")
sentence = sentence.replace("pronoun", theNameYouWant,1)
for i in range(0, len(keywords)):
  print(doc[i], doc[i].pos_)
  if doc[i].pos_  == "PRON":
    sentence = sentence.replace("pronoun", keywords[i],1)
  if doc[i].pos_ == "NOUN":
    sentence = sentence.replace("Noun", keywords[i],1)
  elif doc[i].pos_ == "VERB":
    sentence = sentence.replace("verb", keywords[i],1)
  elif doc[i].pos_ == "ADP":
    sentence = sentence.replace("preposition", keywords[i],1)
  elif keywords[i] in article_list:
    sentence = sentence.replace("article", keywords[i],1)
  print(sentence)

print(sentence)
article = " article "
for   article  in sentence:
  sentence = sentence.replace("article", "")

print(sentence)

import random
while "preposition Noun" in sentence:
  random_int = random.randint(0, len(locations))
  sentence = sentence.replace("preposition Noun", locations[random_int],1)

print(sentence)

sentence = sentence.replace("pronoun","I",1)
if "verb" in sentence:
  for verb, noun in verbs_with_nouns:
    if noun != None:
      if noun in sentence:
        sentence = sentence.replace("verb", verb,1)

while "verb" in sentence:
  random_int = random.randint(0, len(verbs_with_nouns) -1)
  verb, noun = verbs_with_nouns[random_int]
  if noun:
    replacement = f"{verb}"
  else:
    replacement = verb
  sentence = sentence.replace("verb", replacement, 1)

if "Noun" in sentence:
    for verb, noun in verbs_with_nouns:
        if verb in sentence:
          if noun == None:
            sentence = sentence.replace("Noun", "",1)
          else:
            sentence = sentence.replace("Noun",  noun,1)

sentence = sentence.replace("Noun","I",1)
print(sentence)